# Auto generated from an XMI file
# Do not edit this file
# Edit admin_custom.py instead
from models_generic import (
    Bibliographic_Entry_Bib_Category,
    Commentary,
    Edition_Bibliographic_Entry,
    Editor,
    Folio_Side,
    King,
    Sigla_Provenance,
    Topic,
    Version_Relationship_Type,
)
from models import (
    Archive,
    Bib_Category,
    Bibliographic_Entry,
    Edition,
    Edition_Translation,
    Editor_Edition,
    EEL_Edition_Status,
    Folio_Image,
    Glossary_Term,
    Hyparchetype,
    Language,
    Manuscript,
    Person,
    Place,
    Resource,
    Text_Attribute,
    Text_Attribute_Work,
    User_Comment,
    Version,
    Version_Language,
    Version_Relationship,
    Version_Witness,
    Witness,
    Witness_Language,
    Witness_Transcription,
    Witness_Translation,
    Work,
)
from django.contrib import admin

#


class Text_Attribute_WorkInline(admin.TabularInline):

    model = Text_Attribute_Work
    extra = 1

#


class Editor_EditionInline(admin.TabularInline):

    model = Editor_Edition
    extra = 1

#


class Bibliographic_Entry_Bib_CategoryInline(admin.TabularInline):

    model = Bibliographic_Entry_Bib_Category
    extra = 1

#


class Version_WitnessInline(admin.TabularInline):

    model = Version_Witness
    extra = 1

#


class Witness_LanguageInline(admin.TabularInline):

    model = Witness_Language
    extra = 1

#


class Version_LanguageInline(admin.TabularInline):

    model = Version_Language
    extra = 1

#


class Edition_Bibliographic_EntryInline(admin.TabularInline):

    model = Edition_Bibliographic_Entry
    extra = 1

#


class VersionAdmin(admin.ModelAdmin):
    model = Version

    verbose_name = 'Version'
    verbose_name_plural = 'Versions'

    inlines = (Version_WitnessInline, Version_LanguageInline, )

    list_display = ('standard_abbreviation', )
    search_fields = ['standard_abbreviation', ]

#


class Text_AttributeAdmin(admin.ModelAdmin):
    model = Text_Attribute

    verbose_name = 'Text Attribute'
    verbose_name_plural = 'Text Attributes'

    inlines = (Text_Attribute_WorkInline, )

    list_display = ('name', )
    search_fields = ['name', ]

#


class Glossary_TermAdmin(admin.ModelAdmin):
    model = Glossary_Term

    verbose_name = 'Glossary Term'
    verbose_name_plural = 'Glossary Terms'

    inlines = ()

    list_display = ('term', )
    search_fields = ['term', ]

#


class WorkAdmin(admin.ModelAdmin):
    model = Work

    verbose_name = 'Work'
    verbose_name_plural = 'Works'

    inlines = (Text_Attribute_WorkInline, )

    list_display = ('name', )
    search_fields = ['name', ]

#


class CommentaryAdmin(admin.ModelAdmin):
    model = Commentary

    verbose_name = 'Commentary'
    verbose_name_plural = 'Commentaries'

    inlines = ()


#
class Folio_ImageAdmin(admin.ModelAdmin):
    model = Folio_Image

    verbose_name = 'Folio Image'
    verbose_name_plural = 'Folio Images'

    inlines = ()

    list_display = ('filepath', )
    search_fields = ['filepath', ]

#


class Bibliographic_EntryAdmin(admin.ModelAdmin):
    model = Bibliographic_Entry

    verbose_name = 'Bibliographic Entry'
    verbose_name_plural = 'Bibliographic Entries'

    inlines = (Bibliographic_Entry_Bib_CategoryInline,
               Edition_Bibliographic_EntryInline, )


#
class ManuscriptAdmin(admin.ModelAdmin):
    model = Manuscript

    verbose_name = 'Manuscript'
    verbose_name_plural = 'Manuscripts'

    inlines = ()

    list_display = ('shelf_mark', )
    search_fields = ['shelf_mark', ]

#


class EditionAdmin(admin.ModelAdmin):
    model = Edition

    verbose_name = 'Edition'
    verbose_name_plural = 'Editions'

    inlines = (Editor_EditionInline, Edition_Bibliographic_EntryInline, )


#
class Witness_TranscriptionAdmin(admin.ModelAdmin):
    model = Witness_Transcription

    verbose_name = 'Witness Transcription'
    verbose_name_plural = 'Witness Transcriptions'

    inlines = ()


#
class Witness_TranslationAdmin(admin.ModelAdmin):
    model = Witness_Translation

    verbose_name = 'Witness Translation'
    verbose_name_plural = 'Witness Translations'

    inlines = ()


#
class Edition_TranslationAdmin(admin.ModelAdmin):
    model = Edition_Translation

    verbose_name = 'Edition Translation'
    verbose_name_plural = 'Edition Translations'

    inlines = ()


#
class WitnessAdmin(admin.ModelAdmin):
    model = Witness

    verbose_name = 'Witness'
    verbose_name_plural = 'Witnesses'

    inlines = (Version_WitnessInline, Witness_LanguageInline, )


#
class EditorAdmin(admin.ModelAdmin):
    model = Editor

    verbose_name = 'Editor'
    verbose_name_plural = 'Editors'

    inlines = (Editor_EditionInline, )

    list_display = ('abbreviation', )
    search_fields = ['abbreviation', ]

#


class EEL_Edition_StatusAdmin(admin.ModelAdmin):
    model = EEL_Edition_Status

    verbose_name = 'EEL Edition Status'
    verbose_name_plural = 'EEL Edition Statuses'

    inlines = ()

    list_display = ('name', )
    search_fields = ['name', ]

#


class KingAdmin(admin.ModelAdmin):
    model = King

    verbose_name = 'King'
    verbose_name_plural = 'Kings'

    inlines = ()


#
class LanguageAdmin(admin.ModelAdmin):
    model = Language

    verbose_name = 'Language'
    verbose_name_plural = 'Languages'

    inlines = (Witness_LanguageInline, Version_LanguageInline, )

    list_display = ('name', )
    search_fields = ['name', ]

#


class Bib_CategoryAdmin(admin.ModelAdmin):
    model = Bib_Category

    verbose_name = 'Bib Category'
    verbose_name_plural = 'Bib Categories'

    inlines = (Bibliographic_Entry_Bib_CategoryInline, )

    list_display = ('name', )
    search_fields = ['name', ]

#


class ArchiveAdmin(admin.ModelAdmin):
    model = Archive

    verbose_name = 'Archive'
    verbose_name_plural = 'Archives'

    inlines = ()

    list_display = ('city', 'name', )
    search_fields = ['city', ]

#


class Sigla_ProvenanceAdmin(admin.ModelAdmin):
    model = Sigla_Provenance

    verbose_name = 'Sigla Provenance'
    verbose_name_plural = 'Sigla Provenances'

    inlines = ()

    list_display = ('name', )
    search_fields = ['name', ]

#


class Folio_SideAdmin(admin.ModelAdmin):
    model = Folio_Side

    verbose_name = 'Folio Side'
    verbose_name_plural = 'Folio Sides'

    inlines = ()

    list_display = ('name', )
    search_fields = ['name', ]

#


class Version_Relationship_TypeAdmin(admin.ModelAdmin):
    model = Version_Relationship_Type

    verbose_name = 'Version Relationship Type'
    verbose_name_plural = 'Version Relationship Types'

    inlines = ()

    list_display = ('name', )
    search_fields = ['name', ]

#


class Version_RelationshipAdmin(admin.ModelAdmin):
    model = Version_Relationship

    verbose_name = 'Version Relationship'
    verbose_name_plural = 'Version Relationships'

    inlines = ()


#
class PersonAdmin(admin.ModelAdmin):
    model = Person

    verbose_name = 'Person'
    verbose_name_plural = 'Persons'

    inlines = ()

    list_display = ('name', )
    search_fields = ['name', ]

#


class PlaceAdmin(admin.ModelAdmin):
    model = Place

    verbose_name = 'Place'
    verbose_name_plural = 'Places'

    inlines = ()

    list_display = ('name', )
    search_fields = ['name', ]

#


class TopicAdmin(admin.ModelAdmin):
    model = Topic

    verbose_name = 'Topic'
    verbose_name_plural = 'Topics'

    inlines = ()

    list_display = ('name', )
    search_fields = ['name', ]

#


class HyparchetypeAdmin(admin.ModelAdmin):
    model = Hyparchetype

    verbose_name = 'Hyparchetype'
    verbose_name_plural = 'Hyparchetypes'

    inlines = ()


#
class ResourceAdmin(admin.ModelAdmin):
    model = Resource

    verbose_name = 'Resource'
    verbose_name_plural = 'Resources'

    inlines = ()


#
class User_CommentAdmin(admin.ModelAdmin):
    model = User_Comment

    verbose_name = 'User Comment'
    verbose_name_plural = 'User Comments'

    inlines = ()


#
