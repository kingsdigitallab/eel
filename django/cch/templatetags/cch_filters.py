# -*- coding: utf-8 -*-
from django import template
import re

register = template.Library()


@register.filter
def dget(obj, key):
    return obj[key]


@register.filter
def plural(value, count=2):
    '''
    Usage:
            {{ var|plural }}
            {{ var|plural:count }}

            If [count] > 1 or [count] is not specified, the filter returns the plural form of [var].
            Plural form is generated by sequentially applying the following rules:
                * convert 'y' at the end into 'ie'               (contry -> contrie)
                * convert 'ss' at the end into 'e'               (witness -> witnesse)
                * add a 's' at the end is none already there     (nation -> nations)
    '''
    words = value.split(' ')
    if len(words) > 1:
        # We got a phrase. Pluralise each word separately.
        ret = ' '.join([plural(word, count) for word in words])
    else:
        ret = value
        if ret in ['of']:
            return ret
        if count > 1:
            if ret in ['a', 'an']:
                return ''
            if ret[-1:] == 'y':
                ret = ret[:-1] + 'ie'
            if ret[-2:] == 'ss':
                ret = ret + 'e'
            if not ret[-1:] == 's':
                ret = ret + 's'
    return ret


@register.filter
def footnotes(value, heading='<h3>Notes</h3>'):
    '''
     Sample usage:

         this a reference to a footnote[^1]

         <p>[^1]: this is the actual footnote</p>

     Will be turned into:

        this a reference to a footnote<sup id="fnref:1">
        <a rel="footnote" href="#fn:1">1</a>
        </sup>

        <div class="footnote">
        <h2>Notes</h2>
        <ol>
        <li id="fn:1"> this is the actual footnote <a title="Jump back to footnote 1 in the text" rev="footnote" href="#fnref:1">↩</a></li>
        <li id="fn:2">etc. <a title="Jump back to footnote 2 in the text" rev="footnote" href="#fnref:2">↩</a>
        </li>
        </ol>
        </div>
    '''
    footnotes = re.findall(ur'(<p[^>]*>\s*(\[\^([^]]+)\]:)(.*?)</p>)', value)
    i = 0
    for note in footnotes:
        rep = u''
        if i == 0:
            rep = rep + u'<div class="footnote">%s<ol>' % heading

        rep = rep + ur'<li id="fn:%s">%s. <a title="Jump back to footnote %s in the text" rev="footnote" href="#fnref:%s">^</a> %s</li>' % (
            note[2], note[2], note[2], note[2], note[3])

        if i == len(footnotes) - 1:
            rep = rep + u'</ol></div>'

        value = value.replace(note[0], rep)

        i = i + 1

    ret = re.sub(
        ur'(\[\^([^]]+)\])',
        ur'''<sup id="fnref:\2"><a rel="footnote" href="#fn:\2">\2</a></sup>''',
        value)

    return ret
